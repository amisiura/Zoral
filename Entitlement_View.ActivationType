-- create or replace table `zoral-sandbox.test_report_blue.entitlement_view_product` as
-- with
-- add_ent as (
-- SELECT 
--         EntitlementId,
-- 		ProductStaticId,
--         ProductId ,
--         ActivityTimestamp,
--         Activitytype,
--     FROM 
--          `sdp-prod-100.sdp_views.zTechEntitlementView`
--     WHERE 
--         ActivityType = 'ADD_ENTITLEMENTS'
--           and SDPTimestamp <=  (select max(SDPTimestamp) from `zoral-sandbox.sdp_views_cr.EntitlementDatasetA` )
--          ),
-- max_add_ent as ( 
-- select  max (ch.Activitytimestamp) as max_add_ent_Activitytimestamp,
--          t.ActivityTimestamp, t.Activitytype , t.EntitlementId
--           from    `sdp-prod-100.sdp_views.zTechEntitlementView` t 
--           left  join  add_ent ch
--           on ch.EntitlementId = t.EntitlementId 
--           and ch.Activitytimestamp < t.Activitytimestamp
--           where   t.ActivityType not in ( 'ELAPSED_CANCELLED_ENTITLEMENT','ADD_ENTITLEMENTS')
--             and SDPTimestamp <=  (select max(SDPTimestamp) from `zoral-sandbox.sdp_views_cr.EntitlementDatasetA` )
--           group by t.ActivityTimestamp, t.Activitytype , t.EntitlementId
--           ) 
		  
		  
-- --,product_id as ( 
-- select 
-- 			ent.EntitlementId, 
-- 			ent.ActivityTimestamp, 
-- 			ent.Activitytype, 
--       ent.SDPTimestamp ,
      
-- 			case when ent.Activitytype = 'ADD_ENTITLEMENTS' then ent.ProductStaticId else adt.ProductStaticId end as ProductStaticId,
--       case when ent.Activitytype = 'ADD_ENTITLEMENTS' then ent.ProductID else adt.ProductID end as ProductID
--        from `sdp-prod-100.sdp_views.zTechEntitlementView` ent
--        left join max_add_ent mx
--        on ent.EntitlementId = mx.EntitlementId
--        and ent.Activitytimestamp = mx.Activitytimestamp
--        and ent.ActivityType = mx.ActivityType
--        left join add_ent adt
--        on ent.EntitlementId = adt.EntitlementId
--        and mx.max_add_ent_Activitytimestamp = adt.Activitytimestamp
--     where  ent.ActivityType <> 'ELAPSED_CANCELLED_ENTITLEMENT'
--           and SDPTimestamp <=  (select max(SDPTimestamp) from `zoral-sandbox.sdp_views_cr.EntitlementDatasetA` )
-- ;

select  
s.DerivedName as sourceDerivedName, 
t.DerivedName as targetDerivedName,  
s.ProductId,
t.ProductId,
s.EntitlementId,


from (
select t.*,
    p.ProductCategory,
    p.partner,
    p.ActivationType,
    p.DerivedName,
    p.BillingType
from 
(
 select
 case when s.ActivityTimestamp >= max_DatePublished then max_DatePublished else min_DatePublished end as needed_DatePublished, 
 s.ProductId, s.ActivityTimestamp, max_DatePublished, min_DatePublished,  EntitlementId
 from `zoral-sandbox.test_report_blue.entitlement_view_product` s
 left join (
 select 
     p.ProductId,
     max(PomCatalogueModelInfo.DatePublished) AS max_DatePublished,
     min(PomCatalogueModelInfo.DatePublished) AS min_DatePublished,     
    from `sdp-prod-100.sdp_tables_blue.Product` p
--     where p.ProductId='C_005381' 
    group by p.ProductId
    ) p on p.ProductId=s.ProductId
--     where s.EntitlementId='b273fb55-dc23-4897-8b47-c34133a74f1b'
  where SDPTimestamp <=  (select max(SDPTimestamp) from `zoral-sandbox.sdp_views_cr.EntitlementDatasetA` )
) t left join 
(select 
    ProductId,
    Category AS ProductCategory,
    ifnull(p.Partner,'') as partner,
    ifnull(re.ActivationType,'') as ActivationType,
    re.Name as DerivedName,
    re.BillingType as BillingType,
    p.PomCatalogueModelInfo.DatePublished as DatePublished
from `sdp-prod-100.sdp_tables_blue.Product` p
left join unnest ( Resources.Entitlements ) re
) p on  p.ProductId=t.ProductId and p.DatePublished = t.needed_DatePublished
) s
inner join `zoral-sandbox.sdp_views_cr.EntitlementDatasetA`t
on s.EntitlementId = t.EntitlementId 
and s.ActivityTimestamp=t.ActivityTimestamp
and s.ProductId=t.ProductId
-- and s.DerivedName<>t.DerivedName
and t.ActivationType<>s.ActivationType
    
