create or replace table `zoral-sandbox.test_report_us.entitlement_view_product` as
with
add_ent as (
SELECT 
        EntitlementId,
		ProductStaticId,
        ProductId ,
        ActivityTimestamp,
        Activitytype,
    FROM 
         `nbcu-sdp-prod-003.sdp_views.zTechEntitlementView`
    WHERE 
        ActivityType = 'ADD_ENTITLEMENTS'
          and SDPTimestamp <=  (select max(SDPTimestamp) from `nbcu-sdp-prod-003.sdp_persistent_views.EntitlementView` )
         ),
max_add_ent as ( 
select  max (ch.Activitytimestamp) as max_add_ent_Activitytimestamp,
         t.ActivityTimestamp, t.Activitytype , t.EntitlementId
          from    `nbcu-sdp-prod-003.sdp_views.zTechEntitlementView` t 
          left  join  add_ent ch
          on ch.EntitlementId = t.EntitlementId 
          and ch.Activitytimestamp < t.Activitytimestamp
          where   t.ActivityType not in ( 'ELAPSED_CANCELLED_ENTITLEMENT','ADD_ENTITLEMENTS')
            and SDPTimestamp <=  (select max(SDPTimestamp) from `nbcu-sdp-prod-003.sdp_persistent_views.EntitlementView` )
          group by t.ActivityTimestamp, t.Activitytype , t.EntitlementId
          ) 
		  
		  
--,product_id as ( 
select 
			ent.EntitlementId, 
			ent.ActivityTimestamp, 
			ent.Activitytype, 
      ent.SDPTimestamp ,
      ent.activationWindow,
      ent.HouseholdId,
      ent.BillingType,
			case when ent.Activitytype = 'ADD_ENTITLEMENTS' then ent.ProductStaticId else adt.ProductStaticId end as ProductStaticId,
      case when ent.Activitytype = 'ADD_ENTITLEMENTS' then ent.ProductID else adt.ProductID end as ProductID
       from `nbcu-sdp-prod-003.sdp_views.zTechEntitlementView` ent
       left join max_add_ent mx
       on ent.EntitlementId = mx.EntitlementId
       and ent.Activitytimestamp = mx.Activitytimestamp
       and ent.ActivityType = mx.ActivityType
       left join add_ent adt
       on ent.EntitlementId = adt.EntitlementId
       and mx.max_add_ent_Activitytimestamp = adt.Activitytimestamp
    where  ent.ActivityType <> 'ELAPSED_CANCELLED_ENTITLEMENT'
          and SDPTimestamp <=  (select max(SDPTimestamp) from `nbcu-sdp-prod-003.sdp_persistent_views.EntitlementView` )
;


begin
create or replace  temp table der_window2 as 
select * from 
(
  select 
  t.EntitlementId,
  t.ActivityTimestamp,          
  case 
    when activityType = 'ADD_ENTITLEMENTS' and t.BillingType is not null THEN t.BillingType 
    else p.BillingType
  end as BillingType 
        from 
        (
           select
           case when s.ActivityTimestamp >= max_DatePublished then max_DatePublished else min_DatePublished end as needed_DatePublished, 
           s.ProductId, 
           s.ActivityTimestamp,
           max_DatePublished,
           min_DatePublished,  
           EntitlementId, 
           s.ActivityType,
           s.BillingType,
           s.activationWindow,
           s.ProductStaticId,
           s.HouseholdId
           from `zoral-sandbox.test_report_us.entitlement_view_product` s
           left join (
           select 
               p.ProductId,
               max(PomCatalogueModelInfo.DatePublished) AS max_DatePublished,
               min(PomCatalogueModelInfo.DatePublished) AS min_DatePublished,     
              from `nbcu-sdp-prod-003.sdp_tables_green.Product` p
        --       where p.ProductId='C_005381' 
              group by p.ProductId
              ) p on p.ProductId=s.ProductId
              where true
--               and s.EntitlementId='b273fb55-dc23-4897-8b47-c34133a74f1b'
            and  SDPTimestamp <=  (select max(SDPTimestamp) from `nbcu-sdp-prod-003.sdp_persistent_views.EntitlementView` )
        ) t left join 
                  (
                    select 
                        ProductId,
                        Category AS ProductCategory,
                        ifnull(p.Partner,'') as partner,
                        ifnull(re.ActivationType,'') as ActivationType,
                        re.Name as DerivedName,
                        re.BillingType as BillingType,
                        re.ActivationWindow as prod_ActivationWindow,
                        p.ProductStaticId,
                        p.PomCatalogueModelInfo.DatePublished as DatePublished
                    from `nbcu-sdp-prod-003.sdp_tables_green.Product` p
                    left join unnest ( Resources.Entitlements ) re
                  ) p on  p.ProductId=t.ProductId and p.DatePublished = t.needed_DatePublished

) s;

select * from der_window2 s
inner join `nbcu-sdp-prod-003.sdp_persistent_views.EntitlementView` t
on s.EntitlementId = t.EntitlementId 
and s.ActivityTimestamp=t.ActivityTimestamp
and s.BillingType <> t.BillingType;

end;
